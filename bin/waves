#!/usr/bin/env ruby

# = Generate or update a Waves application
# 
# The +waves+ script generates a new Waves application or updates an existing one.  The script uses RakeGen for file copies and template processing, and the current version of RakeGen requires you to affirm that you want to clobber each and every file when doing an update.
#
# == Usage
# 
#   # Generate a Waves app using the default ORM layer, which is currently Sequel
#   waves /path/to/app  
#
#   # Generate an app using the default ORM layer, which is currently Sequel
#   waves /path/to/app --orm=active_record
#
#   # Generate an app that does not include an ORM layer
#   waves /path/to/app -o none 

require 'rubygems'
require 'choice'
require 'rakegen'



# if we're in the waves source, prepend it to the load path
waves_lib = File.expand_path( "#{File.dirname(__FILE__)}/../../waves/lib" )
$:.unshift waves_lib if File.exist?(waves_lib)
require 'waves'

begin
  require 'utilities/string'
rescue LoadError
  require File.join(File.dirname(__FILE__), '..', 'lib', 'utilities', 'string')
end

Choice.options do
  banner 'Usage:  waves path/to/app [-h]'
  option :help  do
    long '--help'
    desc 'Show this message'
  end
  
  option :orm do
    short '-o'
    long '--orm=ORM'
    desc "Select an ORM (e.g. active_record, sequel, none)"
    default "sequel"
  end
  
end

orm = Choice.choices.orm.snake_case
orm_require, orm_include = case orm
when 'sequel'
  ["require 'layers/orm/sequel'", "include Waves::Layers::ORM::Sequel"]
when 'active_record'
  ["require 'layers/orm/active_record'", "include Waves::Layers::ORM::ActiveRecord"]
when 'none'
  ['', '# This app was generated without an ORM layer']
end

app_path = ARGV[0]
app_name = File.basename(app_path)
if app_name =~ /[^\w\d_]/
  raise ArgumentError, <<-TEXT
  Unusable name: \"#{app_name}\"
  Application names may contain only letters, numbers, and underscores."
TEXT
end

template = "#{WAVES}/app"

generator = Rakegen.new("waves:app") do |gen|
  gen.source = template
  gen.target = app_path
  gen.template_assigns = {:name => app_name.camel_case, :orm_require => orm_require, :orm_include => orm_include }
  gen.executables = %w{ bin/waves-console  bin/waves-server}
end

puts "** Creating new Waves application ..."

Rake::Task["waves:app"].invoke

puts "** Application created!"

